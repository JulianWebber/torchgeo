# Copyright (c) TorchGeo Contributors. All rights reserved.
# Licensed under the MIT License.

# Sorted by # contributors, then # forks, etc. (update_github.py)
index = [
    'TorchGeo',
    'OTB',
    'TerraTorch',
    'Raster Vision',
    'SITS',
    'DeepForest',
    'samgeo',
    'spopt',
    'ML4Floods',
    'geo-bench',
    'SPy',
    'srai',
    'OTBTF',
    'Myria3D',
    'GeoAI',
    'scikit-eo',
    'GeoTessera',
    'GeoDeep',
]

# Sort by date of first commit (update_timeline.py)
name_to_github = {
    'SPy': ('spectralpython', 'spectral'),
    'OTB': ('orfeotoolbox', 'OTB'),
    'DeepOSM': ('trailbehind', 'DeepOSM'),
    'Hyperspectral': ('KGPML', 'Hyperspectral'),
    'DeepNetsForEO': ('nshaud', 'DeepNetsForEO'),
    'SITS': ('e-sensing', 'sits'),
    'Raster Vision': ('azavea', 'raster-vision'),
    'DeepHyperX': ('nshaud', 'DeepHyperX'),
    'Pyinterpolate': ('DataverseLabs', 'pyinterpolate'),
    'OTBTF': ('remicres', 'otbtf'),
    'eo-learn': ('sentinel-hub', 'eo-learn'),
    'RoboSat': ('mapbox', 'robosat'),
    'spopt': ('pysal', 'spopt'),
    'DELTA': ('nasa', 'delta'),
    'TorchSat': ('sshuair', 'torchsat'),
    'Solaris': ('CosmiQ', 'solaris'),
    'AIDE': ('microsoft', 'aerial_wildlife_detection'),
    'AiTLAS': ('biasvariancelabs', 'aitlas'),
    'DeepForest': ('weecology', 'DeepForest'),
    'ML4Floods': ('spaceml-org', 'ml4floods'),
    'TorchGeo': ('torchgeo', 'torchgeo'),
    'geo-bench': ('ServiceNow', 'geo-bench'),
    'torchrs': ('isaaccorley', 'torchrs'),
    'Myria3D': ('IGNF', 'myria3d'),
    'PaddleRS': ('PaddlePaddle', 'PaddleRS'),
    'GeoTorchAI': ('wherobots', 'GeoTorchAI'),
    'Raster4ML': ('souravbhadra', 'raster4ml'),
    'srai': ('kraina-ai', 'srai'),
    'Moonshine': ('moonshinelabs-ai', 'moonshine-remote-sensing'),
    'samgeo': ('opengeos', 'segment-geospatial'),
    'geodl': ('maxwell-geospatial', 'geodl'),
    'GeoAI': ('opengeos', 'geoai'),
    'scikit-eo': ('yotarazona', 'scikit-eo'),
    'TerraTorch': ('IBM', 'terratorch'),
    'GeoDeep': ('uav4geo', 'GeoDeep'),
    'GeoTessera': ('ucam-eo', 'geotessera'),
}
name_to_codecov = {
    'SITS': ('gh', 'e-sensing', 'sits'),
    'spopt': ('gh', 'pysal', 'spopt'),
    'TorchGeo': ('gh', 'torchgeo', 'torchgeo'),
    'srai': ('gh', 'kraina-ai', 'srai'),
}
# TODO: remove these as coverage statistics are reported
# Manually computed using `pytest --cov=<src>` or `coverage run`
hardcoded_coverage = {
    'OTB': 56,
    'TerraTorch': 55,
    'Raster Vision': 90,
    'DeepForest': 86,
    'samgeo': 13,
    'ML4Floods': 0,
    'geo-bench': 51,
    'SPy': 69,
    'OTBTF': 55,
    'Myria3D': 57,
    'GeoAI': 6,
    'scikit-eo': 32,
    'GeoTessera': 15,
    'GeoDeep': 0,
}
name_to_pypi = {
    'SPy': 'spectral',
    'SITS': 'pysits',
    'Raster Vision': 'rastervision',
    'spopt': 'spopt',
    'DeepForest': 'deepforest',
    'ML4Floods': 'ml4floods',
    'TorchGeo': 'torchgeo',
    'geo-bench': 'geobench',
    'Myria3D': 'myria3d',
    'srai': 'srai',
    'samgeo': 'segment-geospatial',
    'GeoAI': 'geoai-py',
    'scikit-eo': 'scikeo',
    'TerraTorch': 'terratorch',
    'GeoDeep': 'geodeep',
    'GeoTessera': 'geotessera',
}
name_to_cran = {'SITS': 'sits'}
name_to_conda = {
    'SPy': 'spectral',
    'SITS': 'r-sits',
    'Raster Vision': 'rastervision-core',
    'spopt': 'spopt',
    'DeepForest': 'deepforest',
    'TorchGeo': 'torchgeo',
    'samgeo': 'segment-geospatial',
    'GeoAI': 'geoai',
}
